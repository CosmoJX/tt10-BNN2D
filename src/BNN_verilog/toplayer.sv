`timescale 1ns/1ps
`include "bnn_network.sv"

module toplayer();

    parameter int IMG_SIZE = 30;
    parameter int BNN1_CHANL = 8;
    parameter int BNN2_CHANL = 16;
    parameter int KERNEL_SIZE = 3;
    parameter int MAXPOOL_KERNEL_SIZE = 2;
    parameter int MAXPOOL_STRIDE = 2;
    parameter int MLP_CHANL = 32;
    parameter int NUM_CLASS = 10;
    parameter int DEFAULT_THRESHOLD_WIDTH = 8;

    parameter int BNN1_IMG_SIZE = IMG_SIZE-KERNEL_SIZE+1;
    parameter int MAXPOOL1_IMG_SIZE = BNN1_IMG_SIZE/MAXPOOL_STRIDE;
    parameter int BNN2_IMG_SIZE = MAXPOOL1_IMG_SIZE-KERNEL_SIZE+1;
    parameter int MAXPOOL2_IMG_SIZE = BNN2_IMG_SIZE/MAXPOOL_STRIDE;

    logic [IMG_SIZE*IMG_SIZE-1:0] img;
    logic [KERNEL_SIZE*KERNEL_SIZE*BNN1_CHANL] bnn1_weights;
    logic [KERNEL_SIZE*KERNEL_SIZE*BNN1_CHANL*BNN2_CHANL] bnn2_weights;
    logic [BNN2_CHANL*MAXPOOL2_IMG_SIZE*MAXPOOL2_IMG_SIZE*MLP_CHANL] mlp1_weights;
    logic [MLP_CHANL*NUM_CLASS] mlp2_weights;
    logic [31:0] bnn1_threshold;
    logic [111:0] bnn2_threshold;
    logic [319:0] mlp1_threshold;
    logic [$clog2(NUM_CLASS)-1:0] out;
    
    
    assign img = 'b
    assign bnn1_weights = 'h1900B80377DC07F3F6;
    assign bnn2_weights = 'h8DFEE00FF07FFE070F4EC025A647F803FCF72BD53EE3FD9F2765BFDFB7D7EC17901865BE58C974C06DB88BA7D71100081FFCAD1BFC417338AE2EDFE89A7FBBAE0926CF3DFEFF7729110FFFD03E12F3C1D8B48092700F5A07FFFAF871E3FC03C75C703BBA43D5326E3C02FDF7FCB1869B32FA00FB7F3BEDBEE076FA6996F7C6EBA9C606DC99B2EB3CDBAB6E7DB763A5B7;
    assign mlp1_weights = 'h
    assign mlp2_weights = 'h0C9D7B772330FCB0B03727E6ECE239C3B115C4FF8E7F082F2E794C77A76A96FA6E4CDACD50495098;
    assign bnn1_threshold = 'h45454546;
    assign bnn2_threshold = 'h0810204081420408183040810205;
    assign mlp1_threshold = 'h48120481204812048120481204812048120481204812048120481204812048120481204812048120;
    
    BNN_network netowrk (
        .in_image(img),
        .bnn1_weights(bnn1_weights),
        .bnn2_weights(bnn2_weights),
        .mlp1_weights(mlp1_weights),
        .mlp2_weights(mlp2_weights),
        .bnn1_threshold(bnn1_threshold),
        .bnn2_threshold(bnn2_threshold),
        .mlp1_threshold(mlp1_threshold),
        .out(out)
    );

endmodule


module tb_toplayer();

  // Instantiate your DUT (toplayer)
  toplayer dut();

  // Generate a dummy clock signal to force time progression.
  logic clk;
  initial begin
    clk = 0;
    forever #5 clk = ~clk;  // 10 ns period clock.
  end

  // Dummy sequential process to ensure clock is used.
  logic dummy_reg;
  always_ff @(posedge clk) begin
    dummy_reg <= ~dummy_reg;
  end

  // Dump waveforms for viewing
  initial begin
    $dumpfile("tb_toplayer.vcd");
    $dumpvars(0, tb_toplayer);
  end

  // Stimulus: Wait a while, print outputs, then finish simulation.
  initial begin
    // Wait for a few clock cycles (say 100 ns).
    #100;
    $display("Simulation Time: %0t ns", $time);
    $display("Image: %b", dut.img);
    $display("BNN Network Output: %h", dut.out);
    #10;
    $finish;
  end

endmodule